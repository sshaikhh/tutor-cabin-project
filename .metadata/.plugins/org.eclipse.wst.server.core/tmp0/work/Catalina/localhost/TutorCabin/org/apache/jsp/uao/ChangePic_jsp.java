/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.16
 * Generated at: 2020-04-18 17:13:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.uao;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class ChangePic_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("\r\n");
      out.write("\t<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.0.0/jquery.min.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/croppie/2.6.4/croppie.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/croppie/2.6.4/croppie.min.js\"></script>\r\n");
      out.write("\t<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery-modal/0.9.1/jquery.modal.min.js\"></script>\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/jquery-modal/0.9.1/jquery.modal.min.css\" />\r\n");
      out.write("\r\n");
      out.write("\t<link rel=\"shortcut icon\" href=\"\">\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("</head>\r\n");
      out.write("<style>\r\n");
      out.write("label.cabinet{\r\n");
      out.write("\tdisplay: block;\r\n");
      out.write("\tcursor: pointer;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("label.cabinet input.file{\r\n");
      out.write("\tposition: relative;\r\n");
      out.write("\theight: 100%;\r\n");
      out.write("\twidth: auto;\r\n");
      out.write("\topacity: 0;\r\n");
      out.write("\t-moz-opacity: 0;\r\n");
      out.write("  filter:progid:DXImageTransform.Microsoft.Alpha(opacity=0);\r\n");
      out.write("  margin-top:-30px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#upload-demo{\r\n");
      out.write("\twidth: 250px;\r\n");
      out.write("\theight: 250px;\r\n");
      out.write("  padding-bottom:25px;\r\n");
      out.write("}\r\n");
      out.write("figure figcaption {\r\n");
      out.write("    position: absolute;\r\n");
      out.write("    bottom: 0;\r\n");
      out.write("    color: #fff;\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    padding-left: 9px;\r\n");
      out.write("    padding-bottom: 5px;\r\n");
      out.write("    text-shadow: 0 0 10px #000;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-xs-12\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<label class=\"cabinet center-block\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<figure>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<img src=\"\" class=\"gambar img-responsive img-thumbnail\" id=\"item-img-output\" />\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t  <figcaption><i class=\"fa fa-camera\"></i></figcaption>\r\n");
      out.write("\t\t\t\t\t\t\t\t    </figure>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<input type=\"file\" class=\"item-img file center-block\" name=\"file_photo\"/>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"modal fade\" id=\"cropImagePop\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\r\n");
      out.write("\t\t\t\t\t\t  <div class=\"modal-dialog\">\r\n");
      out.write("\t\t\t\t\t\t    <div class=\"modal-content\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"modal-header\">\r\n");
      out.write("\t\t\t\t\t\t\t  <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\r\n");
      out.write("\t\t\t\t\t\t\t  <h4 class=\"modal-title\" id=\"myModalLabel\">\r\n");
      out.write("\t\t\t\t\t\t\t  \t<?=multiLanguage( \"Edit Foto\" , \"Edit Photo\" )?></h4>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"modal-body\">\r\n");
      out.write("\t\t\t\t            <div id=\"upload-demo\" class=\"center-block\"></div>\r\n");
      out.write("\t\t\t\t      </div>\r\n");
      out.write("\t\t\t\t\t\t\t <div class=\"modal-footer\">\r\n");
      out.write("        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\r\n");
      out.write("        <button type=\"button\" id=\"cropImageBtn\" class=\"btn btn-primary\">Crop</button>\r\n");
      out.write("      </div>\r\n");
      out.write("\t\t\t\t\t\t    </div>\r\n");
      out.write("\t\t\t\t\t\t  </div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("//Start upload preview image\r\n");
      out.write("$(\".gambar\").attr(\"src\", \"https://user.gadjian.com/static/images/personnel_boy.png\");\r\n");
      out.write("\t\t\t\t\t\tvar $uploadCrop,\r\n");
      out.write("\t\t\t\t\t\ttempFilename,\r\n");
      out.write("\t\t\t\t\t\trawImg,\r\n");
      out.write("\t\t\t\t\t\timageId;\r\n");
      out.write("\t\t\t\t\t\tfunction readFile(input) {\r\n");
      out.write("\t\t\t\t \t\t\tif (input.files && input.files[0]) {\r\n");
      out.write("\t\t\t\t              var reader = new FileReader();\r\n");
      out.write("\t\t\t\t\t            reader.onload = function (e) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t$('.upload-demo').addClass('ready');\r\n");
      out.write("\t\t\t\t\t\t\t\t\t$('#cropImagePop').modal('show');\r\n");
      out.write("\t\t\t\t\t\t            rawImg = e.target.result;\r\n");
      out.write("\t\t\t\t\t            }\r\n");
      out.write("\t\t\t\t\t            reader.readAsDataURL(input.files[0]);\r\n");
      out.write("\t\t\t\t\t        }\r\n");
      out.write("\t\t\t\t\t        else {\r\n");
      out.write("\t\t\t\t\t\t        swal(\"Sorry - you're browser doesn't support the FileReader API\");\r\n");
      out.write("\t\t\t\t\t\t    }\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t$uploadCrop = $('#upload-demo').croppie({\r\n");
      out.write("\t\t\t\t\t\t\tviewport: {\r\n");
      out.write("\t\t\t\t\t\t\t\twidth: 150,\r\n");
      out.write("\t\t\t\t\t\t\t\theight: 200,\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\tenforceBoundary: false,\r\n");
      out.write("\t\t\t\t\t\t\tenableExif: true\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t$('#cropImagePop').on('shown.bs.modal', function(){\r\n");
      out.write("\t\t\t\t\t\t\t// alert('Shown pop');\r\n");
      out.write("\t\t\t\t\t\t\t$uploadCrop.croppie('bind', {\r\n");
      out.write("\t\t\t\t        \t\turl: rawImg\r\n");
      out.write("\t\t\t\t        \t}).then(function(){\r\n");
      out.write("\t\t\t\t        \t\tconsole.log('jQuery bind complete');\r\n");
      out.write("\t\t\t\t        \t});\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t$('.item-img').on('change', function () { imageId = $(this).data('id'); tempFilename = $(this).val();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t $('#cancelCropBtn').data('id', imageId); readFile(this); });\r\n");
      out.write("\t\t\t\t\t\t$('#cropImageBtn').on('click', function (ev) {\r\n");
      out.write("\t\t\t\t\t\t\t$uploadCrop.croppie('result', {\r\n");
      out.write("\t\t\t\t\t\t\t\ttype: 'base64',\r\n");
      out.write("\t\t\t\t\t\t\t\tformat: 'jpeg',\r\n");
      out.write("\t\t\t\t\t\t\t\tsize: {width: 150, height: 200}\r\n");
      out.write("\t\t\t\t\t\t\t}).then(function (resp) {\r\n");
      out.write("\t\t\t\t\t\t\t\t$('#item-img-output').attr('src', resp);\r\n");
      out.write("\t\t\t\t\t\t\t\t$('#cropImagePop').modal('hide');\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t// End upload preview image\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
